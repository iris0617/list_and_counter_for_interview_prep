[{"/Users/irisli/codebase/counter/src/App.js":"1","/Users/irisli/codebase/counter/src/components/counter.js":"2","/Users/irisli/codebase/counter/src/reportWebVitals.js":"3","/Users/irisli/codebase/counter/src/services/userAPI.js":"4"},{"size":207,"mtime":1612052405624,"results":"5","hashOfConfig":"6"},{"size":1775,"mtime":1612057617087,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1612052302712,"results":"8","hashOfConfig":"6"},{"size":292,"mtime":1612057662981,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9hf6an",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/irisli/codebase/counter/src/App.js",["18"],"/Users/irisli/codebase/counter/src/components/counter.js",["19","20","21"],"/Users/irisli/codebase/counter/src/reportWebVitals.js",[],"/Users/irisli/codebase/counter/src/services/userAPI.js",[],{"ruleId":"22","severity":1,"message":"23","line":1,"column":8,"nodeType":"24","messageId":"25","endLine":1,"endColumn":12},{"ruleId":"26","severity":1,"message":"27","line":10,"column":15,"nodeType":"28","endLine":18,"endColumn":6},{"ruleId":"26","severity":1,"message":"29","line":18,"column":8,"nodeType":"30","endLine":18,"endColumn":10,"suggestions":"31"},{"ruleId":"32","severity":1,"message":"33","line":56,"column":21,"nodeType":"34","endLine":56,"endColumn":55},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'pageNumber'. Either include it or remove the dependency array.","ArrayExpression",["35"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"36","fix":"37"},"Update the dependencies array to be: [pageNumber]",{"range":"38","text":"39"},[547,549],"[pageNumber]"]